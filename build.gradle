import com.github.spotbugs.SpotBugsTask

//////// Setup Linter ////////////////////////////
plugins {
    id "com.github.spotbugs" version "1.7.1"
}

spotbugs {
    toolVersion = '3.1.12'
    excludeFilter = new File("exclusionBugs.xml")
}

// To generate an HTML report instead of XML
tasks.withType(SpotBugsTask) {
    reports.xml.enabled = false
    reports.html.enabled = true
}
///////////////////////////////////////////////////

wrapper {
    gradleVersion = '5.2.1'
}

group 'edu.wpi.cs3733d19.teamN' // replace with your package name
version '0.1'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'jacoco'
apply plugin: 'java-library'

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

mainClassName = "Main" // replace with your main class

sourceCompatibility = 1.8
targetCompatibility = 1.8

//noinspection GroovyAssignabilityCheck
task fastTest(type: Test) {
    useJUnit {
        includeCategories 'testclassifications.FastTest'
        excludeCategories 'testclassifications.UiTest'
        excludeCategories 'testclassifications.LocalTest'
        excludeCategories 'testclassifications.RegressionTest'
        excludeCategories 'testclassifications.SpecialTest'
        excludeCategories 'testclassifications.ElevatorTest'
    }
    outputs.upToDateWhen { false }
}

//noinspection GroovyAssignabilityCheck
task slowTest(type: Test) {
    useJUnit {
        includeCategories 'testclassifications.SlowTest'
        excludeCategories 'testclassifications.UiTest'
        excludeCategories 'testclassifications.LocalTest'
        excludeCategories 'testclassifications.RegressionTest'
        excludeCategories 'testclassifications.SpecialTest'
        excludeCategories 'testclassifications.ElevatorTest'
    }
    outputs.upToDateWhen { false }
}

//noinspection GroovyAssignabilityCheck
task uiFastTest(type: Test) {
    useJUnit {
        includeCategories 'testclassifications.UiTest'
        excludeCategories 'testclassifications.SlowTest'
        excludeCategories 'testclassifications.LocalTest'
        excludeCategories 'testclassifications.RegressionTest'
        excludeCategories 'testclassifications.SpecialTest'
        excludeCategories 'testclassifications.ElevatorTest'
    }
    outputs.upToDateWhen { false }
    forkEvery = 1
}

//noinspection GroovyAssignabilityCheck
task uiSlowTest(type: Test) {
    useJUnit {
        includeCategories 'testclassifications.UiTest'
        excludeCategories 'testclassifications.FastTest'
        excludeCategories 'testclassifications.LocalTest'
        excludeCategories 'testclassifications.RegressionTest'
        excludeCategories 'testclassifications.SpecialTest'
        excludeCategories 'testclassifications.ElevatorTest'
    }
    outputs.upToDateWhen { false }
    forkEvery = 1
}

//noinspection GroovyAssignabilityCheck
task localTest(type: Test) {
    useJUnit {
        includeCategories 'testclassifications.LocalTest'
        excludeCategories 'testclassifications.ElevatorTest'
    }
    outputs.upToDateWhen { false }
}

//noinspection GroovyAssignabilityCheck
task elevatorTest(type: Test) {
    useJUnit {
        includeCategories 'testclassifications.ElevatorTest'
    }
    outputs.upToDateWhen { false }
    forkEvery = 1
}

//noinspection GroovyAssignabilityCheck
task regressionTest(type: Test) {
    useJUnit {
        includeCategories 'testclassifications.RegressionTest'
        excludeCategories 'testclassifications.ElevatorTest'
    }
    outputs.upToDateWhen { false }
}

//noinspection GroovyAssignabilityCheck
task specialTest(type: Test) {
    useJUnit {
        includeCategories 'testclassifications.SpecialTest'
        excludeCategories 'testclassifications.ElevatorTest'
    }
    outputs.upToDateWhen { false }
}

test {
    useJUnit {
        includeCategories 'testclassifications.FastTest'
        includeCategories 'testclassifications.SlowTest'
        includeCategories 'testclassifications.UiTest'
        excludeCategories 'testclassifications.RegressionTest'
        excludeCategories 'testclassifications.LocalTest'
        excludeCategories 'testclassifications.SpecialTest'
        excludeCategories 'testclassifications.ElevatorTest'
    }
    outputs.upToDateWhen { false }
    forkEvery = 1
}

repositories {
    mavenCentral()
    jcenter()
    maven {
        url 'https://ravana.dyn.wpi.edu/maven'
    }
}

configurations {
    compileApi
}


dependencies {
    testCompile(
            [group: 'junit', name: 'junit', version: '4.12'],
            [group: 'com.jfoenix', name: 'jfoenix', version: '8.0.3'],
            [group: 'org.apache.derby', name: 'derby', version: '10.11.1.1'],
            [group: 'org.apache.derby', name: 'derbyclient', version: '10.11.1.1'],
            [group: 'org.apache.derby', name: 'derbytools', version: '10.11.1.1'],
            [group: 'org.hamcrest', name: 'hamcrest-junit', version: '2.0.0.0'],
            [group: 'org.testfx', name: 'testfx-core', version: '4.0.+'],
            [group: 'org.testfx', name: 'testfx-junit', version: '4.0.+'],
            [group: 'org.loadui', name: 'testFx', version: '3.1.2'],
            [group: 'org.mockito', name: 'mockito-core', 'version': '2.9.0'],
            [group: 'com.github.spotbugs', name: 'spotbugs-annotations', version: '3.1.3'],
            [group: 'commons-io', name: 'commons-io', version: '2.6'],
            [group: 'com.neuronrobotics', name: 'SimplePacketComsJava', version: '0.9.2'],
            [group: 'me.xdrop', name:'fuzzywuzzy', version: '1.2.0'],
            [group: 'com.twilio.sdk', name: 'twilio', version: '7.37.0'],
            [group: 'de.jensd', name:'fontawesomefx-commons', version: '8.15'],
            [group: 'de.jensd', name:'fontawesomefx-fontawesome', version: '4.7.0-5'],
            [group: 'de.jensd', name:'fontawesomefx-materialicons', version: '2.2.0-5'],
            [group: 'de.jensd', name:'fontawesomefx-emojione', version: '2.2.7-2'],
            [group: 'de.jensd', name:'fontawesomefx-materialdesignfont', version: '1.7.22-4'],
            [group: 'edu.wpi.cs3733.b17.teamG', name: 'FoodRequest', version:'1.0.0']
    )
    compile(
            [group: 'com.jcraft', name: 'jsch', version: '0.1.55'],
            [group: 'org.toile-libre.libe', name: 'curl', version: '0.0.29'],
            [group: 'com.sparkjava', name: 'spark-core', version: '2.8.0'],
            [group: 'org.slf4j', name: 'slf4j-simple', version: '1.6.4'],
            [group: 'org.slf4j', name: 'slf4j-api', version: '1.7.5'],
            [group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.4.3.v20170317'],
            [group: 'org.eclipse.jetty', name: 'jetty-servlet', version: '9.4.3.v20170317'],
            [group: 'net.kurobako', name: 'gesturefx', version: '0.3.0'],
            [group: 'com.google.guava', name: 'guava', version: '23.0'],
            [group: 'com.jfoenix', name: 'jfoenix', version: '8.0.3'],
            [group: 'org.apache.derby', name: 'derby', version: '10.11.1.1'],
            [group: 'org.apache.derby', name: 'derbyclient', version: '10.11.1.1'],
            [group: 'org.apache.derby', name: 'derbytools', version: '10.11.1.1'],
            [group: 'com.github.spotbugs', name: 'spotbugs-annotations', version: '3.1.3'],
            [group: 'com.neuronrobotics', name: 'SimplePacketComsJava', version: '0.9.2'],
            [group: 'me.xdrop', name:'fuzzywuzzy', version: '1.2.0'],
            [group: 'com.twilio.sdk', name: 'twilio', version: '7.37.0'],
            [group: 'de.jensd', name:'fontawesomefx-commons', version: '8.15'],
            [group: 'de.jensd', name:'fontawesomefx-fontawesome', version: '4.7.0-5'],
            [group: 'de.jensd', name:'fontawesomefx-materialicons', version: '2.2.0-5'],
            [group: 'de.jensd', name:'fontawesomefx-emojione', version: '2.2.7-2'],
            [group: 'de.jensd', name:'fontawesomefx-materialdesignfont', version: '1.7.22-4'],
            [group: 'edu.wpi.cs3733.b17.teamG', name: 'FoodRequest', version:'1.0.0']
    )

    compileApi (
            [group: 'org.apache.derby', name: 'derby', version: '10.11.1.1'],
            [group: 'org.apache.derby', name: 'derbyclient', version: '10.11.1.1'],
            [group: 'org.apache.derby', name: 'derbytools', version: '10.11.1.1'],
            [group: 'com.jfoenix', name: 'jfoenix', version: '8.0.3'],
            [group: 'de.jensd', name:'fontawesomefx-fontawesome', version: '4.7.0-5'],
            [group: 'de.jensd', name:'fontawesomefx-materialicons', version: '2.2.0-5'],
            [group: 'de.jensd', name:'fontawesomefx-emojione', version: '2.2.7-2'],
            [group: 'de.jensd', name:'fontawesomefx-materialdesignfont', version: '1.7.22-4']
    )
}

// This allows the jar to be created, it appears in the build/libs folder
jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
    from configurations.runtime.collect { zipTree(it) }
}

// api.jar
//noinspection GroovyAssignabilityCheck
task apiJar(type: Jar) {
    from(sourceSets.main.output) {
        include "/elevator_api/**"
        include "/elevator/**"
        include "/employee/model/**"
        include "/service_request/model/*"
    }
    from {
        configurations.compileApi.collect { it.isDirectory() ? it : zipTree(it) }
    }
    from(sourceSets.main.resources) {
        include "/fxml/api/api.fxml"
        include "theme.css"
        include "strings.properties"
    }
    baseName 'TeamN-InternalTransportAPI'
}
